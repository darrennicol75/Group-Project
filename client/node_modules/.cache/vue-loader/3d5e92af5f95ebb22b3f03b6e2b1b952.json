{"remainingRequest":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/src/components/Leaderboard.vue?vue&type=template&id=7f8c9efd&lang=html&","dependencies":[{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/src/components/Leaderboard.vue","mtime":1562003723673},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n  <div>\n    <div>\n\n      <apexcharts id=\"leaderboard\" width=\"1000\" type=\"bar\" fontSize='400px :options=\"chartOptions\" :series=\"series\"></apexcharts>\n    </div>\n\n\n\n  </div>\n</template>\n\n<script>\nimport { BTable } from 'bootstrap-vue';\nimport ApexCharts from 'apexcharts';\nimport VueApexCharts from 'vue-apexcharts'\n\n\nexport default {\n\n\n\n  name: \"leaderboard\",\n  components:{\n    \"apexcharts\": VueApexCharts\n  },\n  props:[\"profiles\"],\n  data() {\n    return {\n      colors: ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0', '#546E7A', '#26a69a', '#D10CE8'],\n      chartOptions: {\n          chart: {\n            height: 350,\n            id: 'vuechart-example'\n          },\n          colors: this.colors,\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              columnWidth: '45%',\n              distrubuted: true\n            }\n          },\n\n          dataLabels: {\n            enabled: true\n          },\n          xaxis: {\n            categories: this.arrayOfNames(),\n            labels: {\n               hideOverlappingLabels: true,\n                rotate: 90\n             },\n            style: {\n                colors: this.colors,\n                fontSize: '300%'\n\n\n            }\n       }\n\n          }\n        ,\n        series: [{\n\n          data: this.arrayOfFootprints()\n        }]\n      }\n    },\n\n\n  methods: {\n    deleteProfile(targetProfile){\n      const id=targetProfile._id\n      fetch(\"http://localhost:3000/api/profiles/\" + id, {\n        method: \"DELETE\"\n      })\n      .then((res) => res.json())\n      .then((res) => {\n        eventBus.$emit(\"delete-profile\", id)\n      })\n    },\n\n    handleChange(profile){\n      const edited = {\n        checked_in: !profile.checked_in\n      }\n      const id = profile._id\n      fetch(\"http://localhost:3000/api/profiles/\" + id, {\n        method: \"PUT\",\n        body: JSON.stringify(edited),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then((res) => res.json())\n      .then((res) => {\n        eventBus.$emit(\"update-profile\", id)\n      })\n    },\n\n    arrayOfFootprints(){\n      const result = this.profiles.map( (profile) => {\n        return profile.totalCarbon\n      })\n       result.sort()\n       return result.reverse()\n    },\n\n    arrayOfNames(){\n      const result = this.profiles.map( (profile) => {\n        return profile.name\n      })\n      return result\n    }\n\n\n  }\n\n\n}\n</script>\n\n\n\n\n\n<style lang=\"css\" scoped>\n\n\n#leaderboard {\n  color: white;\n  border: solid 5px;\n  border-color: white;\n  border-radius: 25px;\n  font-size: 100%;\n\n}\n\n\n\n\n\n</style>\n",null]}