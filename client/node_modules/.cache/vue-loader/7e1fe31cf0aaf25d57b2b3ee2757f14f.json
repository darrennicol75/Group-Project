{"remainingRequest":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/src/components/ProfilesList.vue?vue&type=style&index=0&id=4ab44bd8&lang=css&scoped=true&","dependencies":[{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/src/components/ProfilesList.vue","mtime":1561985934749},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonny/Desktop/CodeClan/week_08/Carbon App/carbon_tracker_group-master/carbon_tracker_group/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#grid {\n  width: 15vw;\n  border: solid 5px;\n  background-color: white;\n  display: inline-grid;\n}\n\n\n\n\n\n\n\n\n",{"version":3,"sources":["ProfilesList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA","file":"ProfilesList.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\n  <div class=\"wrapper\">\n    <ul>\n      <!-- <div id=\"grid\" :profiles=\"profiles\" v-for=\"profile in profiles\">\n        <p>{{ profile.name }}</p>\n        <p>{{ profile.email}}</p>\n        <p>{{ profile.travel}}</p>\n        <p>{{ profile.food}}</p>\n        <p>{{ profile.recycling.join(\"  \")}}</p>\n        <p>{{ profile.purchases.join(\" \")}}</p>\n        <p>{{ profile.devices.join(\" \")}}</p>\n        <button type=\"button\" v-on:click=\"deleteProfile (profile)\">Delete Profile</button>\n        <button type=\"button\">Create Carbon Score</button>\n\n      </div> -->\n    </ul>\n\n  </div>\n</template>\n\n<script>\nimport { eventBus } from '@/main'\n\n\nexport default {\n  name: \"profiles-list\",\n  props: [\"profiles\"],\n\n  methods: {\n    deleteProfile(targetProfile){\n      const id=targetProfile._id\n      fetch(\"http://localhost:3000/api/profiles/\" + id, {\n        method: \"DELETE\"\n      })\n      .then((res) => res.json())\n      .then((res) => {\n        eventBus.$emit(\"delete-profile\", id)\n      })\n    },\n\n    handleChange(profile){\n      const edited = {\n        checked_in: !profile.checked_in\n      }\n      const id = profile._id\n      fetch(\"http://localhost:3000/api/profiles/\" + id, {\n        method: \"PUT\",\n        body: JSON.stringify(edited),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then((res) => res.json())\n      .then((res) => {\n        eventBus.$emit(\"update-profile\", id)\n      })\n    }\n  }\n\n}\n</script>\n\n<style lang=\"css\" scoped>\n#grid {\n  width: 15vw;\n  border: solid 5px;\n  background-color: white;\n  display: inline-grid;\n}\n\n\n\n\n\n\n\n\n</style>\n"]}]}